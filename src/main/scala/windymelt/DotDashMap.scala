package windymelt

object DotDashMap {
  type DotDashMap = collection.mutable.Map[String, Seq[String]]
  val ddmap = Map(
    "ぁ" -> "",
    "ああ" -> "あー",
    "ぃ" -> "",
//    "いい" -> "いー",
    "ぅ" -> "",
    "ぇ" -> "",
    "ぉ" -> "",
    "えい" -> "えー",
    "おう" -> "おー",
    "かあ" -> "かー",
    "があ" -> "がー",
    "きい" -> "きー",
    "ぎゃあ" -> "ぎー",
    "きょう" -> "きー",
    "ぎょう" -> "ぎー",
    "くう" -> "くー",
    "ぐう" -> "ぐー",
    "けい" -> "けー",
    "げい" -> "げー",
    "こう" -> "こー",
    "ごう" -> "ごー",
    "さあ " -> "さー",
    "ざあ" -> "ざー",
    "しい" -> "しー",
    "しゃあ" -> "しー",
    "じゃあ" -> "じー",
    "じゃあ" -> "じー",
    "しょう" -> "しー",
    "じょう" -> "じー",
    "ずう" -> "ずー",
    "すう" -> "すー",
    "せい" -> "せー",
    "ぜい" -> "ぜー",
    "そう" -> "そー",
    "たあ" -> "たー",
    "だあ" -> "だー",
    "ちい" -> "ちー",
    "ちゃー" -> "ちー",
    "ちゃあ" -> "ちー",
    "ぢゃあ" -> "ぢー",
    "ちゅー" -> "ちー",
    "ぢょう" -> "ぢー",
    "ちょー" -> "ちー",
    "つう" -> "つー",
    "てい" -> "てー",
    "とう" -> "とー",
    "どう" -> "どー",
    "なあ" -> "なー",
    "にい" -> "にー",
    "ぬう" -> "ぬー",
    "ねい" -> "ねー",
    "ねえ" -> "ねー",
    "のう" -> "のー",
    "はあ" -> "はー",
    "ばあ" -> "ばー",
    "ぱあ" -> "ぱー",
    "ひい" -> "ひー",
    "ひゃあ" -> "ひー",
    "びゃあ" -> "びー",
    "ぴゃあ" -> "ぴー",
    "びょう" -> "びー",
    "ぴょう" -> "ぴー",
    "ふう" -> "ふー",
    "ぶう" -> "ぶー",
    "ぷう" -> "ぷー",
    "へい" -> "へー",
    "べい" -> "べー",
    "ぺい" -> "ぺー",
    "ほう" -> "ほー",
    "ぼう" -> "ぼー",
    "ぽう" -> "ぽー",
    "まあ" -> "まー",
    "みい" -> "みー",
    "むう" -> "むー",
    "めい" -> "めー",
    "もう" -> "もー",
    "みゃあ" -> "みー",
    "みょう" -> "みー",
    "ゃ" -> "",
    "やあ" -> "やー",
    "やあ" -> "やー",
    "ゅ" -> "",
    "ゆう" -> "ゆー",
    "ょ" -> "",
    "よう" -> "よー",
    "らあ" -> "らー",
    "りい" -> "りー",
    "るう" -> "るー",
    "れい" -> "れー",
    "ろう" -> "ろー",
    "りゃあ" -> "りー",
    "りょう" -> "りー",
    "わあ" -> "わー"
  )
  def dotDashParse(word: String): String = {
    val v1 = ddmap.toSeq.foldLeft(word)((w, dd) => w.replace(dd._1, dd._2))
    val v2 = v1.replaceAll("\\s", "").replaceAll("・", "")
    val v3 = v2.map {
      case 'ー'       => '-'
      case otherwise => '.'
    }
    v3
  }
}
